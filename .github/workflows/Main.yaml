name: Sync Fork and Modify Content

on:
  workflow_dispatch: # 允许手动触发
  schedule:
    - cron: "0 16 * * 1" # 每周一的16:00 UTC触发一次，相当于北京时间周一0:00

jobs:
  sync-and-modify:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 确保获取完整的提交历史

      # 步骤2：配置Git
      - name: Configure Git
        run: |
          git config user.name 'GitHub Action'
          git config user.email 'action@github.com'

      # 步骤3：下载并重命名特定文件
      - name: Download and Rename Specific Files
        run: |
          mkdir -p rule-set
          curl -o rule-set/TLD_Not_CN.yaml "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt"
          curl -o rule-set/ForceDirectAPP.yaml "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt"

      # 步骤4：修改rule-set目录中的.txt文件
      - name: Modify .txt Files in Rule-Set Directory
        # find rule-set -type f \( -name "Telegram.yaml" -o -name "OpenAI.yaml" \) -exec sed -i '/IP-ASN/d' {} +
        run: |
          sed -i 's/+\././g' rule-set/TLD-Not-CN.yaml

      # 步骤5：检查是否有更改并提交
      - name: Commit and Push Changes
        env:
          PARSERS_FOR_CLASH_ACTIONS_TOKEN: ${{ secrets.PARSERS_FOR_CLASH_ACTIONS_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.PARSERS_FOR_CLASH_ACTIONS_TOKEN }}@github.com/${{ github.repository }}
          if [ -n "$(git status --porcelain)" ]; then
            git add --all
            git commit -m "Actions: 从上游同步并修改文件"
            git push origin main
          else
            echo "Actions: 上游没有需要修改的提交"
          fi
